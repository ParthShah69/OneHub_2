{"ast":null,"code":"var _jsxFileName = \"F:\\\\hackathon_2\\\\frontend\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiSettings, FiSave, FiUser, FiMail } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = SettingsContainer;\nconst SettingsCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  padding: 30px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  margin-bottom: 20px;\n`;\n_c2 = SettingsCard;\nconst Title = styled.h2`\n  color: white;\n  margin-bottom: 30px;\n  font-size: 2rem;\n  font-weight: 300;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n_c3 = Title;\nconst Section = styled.div`\n  margin-bottom: 40px;\n`;\n_c4 = Section;\nconst SectionTitle = styled.h3`\n  color: white;\n  margin-bottom: 20px;\n  font-size: 1.3rem;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c5 = SectionTitle;\nconst UserInfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  margin-bottom: 30px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c6 = UserInfoGrid;\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 20px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c7 = InfoCard;\nconst InfoLabel = styled.div`\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 14px;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c8 = InfoLabel;\nconst InfoValue = styled.div`\n  color: white;\n  font-size: 16px;\n  font-weight: 500;\n`;\n_c9 = InfoValue;\nconst PreferenceGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 12px;\n  margin-bottom: 20px;\n`;\n_c0 = PreferenceGrid;\nconst PreferenceChip = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border: 2px solid ${props => props.selected ? 'rgba(255, 255, 255, 0.6)' : 'rgba(255, 255, 255, 0.2)'};\n  border-radius: 25px;\n  padding: 10px 15px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  color: white;\n  font-size: 14px;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.15);\n    border-color: rgba(255, 255, 255, 0.4);\n  }\n\n  ${props => props.selected && `\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-1px);\n  `}\n`;\n_c1 = PreferenceChip;\nconst SaveButton = styled.button`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border: none;\n  border-radius: 12px;\n  padding: 15px 30px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: 20px;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c10 = SaveButton;\nconst SuccessMessage = styled.div`\n  background: rgba(0, 255, 0, 0.1);\n  border: 1px solid rgba(0, 255, 0, 0.3);\n  border-radius: 8px;\n  padding: 12px;\n  color: #51cf66;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n_c11 = SuccessMessage;\nconst foodOptions = [{\n  id: 'italian',\n  name: 'Italian'\n}, {\n  id: 'chinese',\n  name: 'Chinese'\n}, {\n  id: 'indian',\n  name: 'Indian'\n}, {\n  id: 'mexican',\n  name: 'Mexican'\n}, {\n  id: 'japanese',\n  name: 'Japanese'\n}, {\n  id: 'american',\n  name: 'American'\n}, {\n  id: 'thai',\n  name: 'Thai'\n}, {\n  id: 'mediterranean',\n  name: 'Mediterranean'\n}];\nconst dietaryOptions = [{\n  id: 'vegetarian',\n  name: 'Vegetarian'\n}, {\n  id: 'vegan',\n  name: 'Vegan'\n}, {\n  id: 'gluten-free',\n  name: 'Gluten Free'\n}, {\n  id: 'keto',\n  name: 'Keto'\n}, {\n  id: 'halal',\n  name: 'Halal'\n}, {\n  id: 'kosher',\n  name: 'Kosher'\n}];\nconst movieGenres = [{\n  id: 'action',\n  name: 'Action'\n}, {\n  id: 'comedy',\n  name: 'Comedy'\n}, {\n  id: 'drama',\n  name: 'Drama'\n}, {\n  id: 'horror',\n  name: 'Horror'\n}, {\n  id: 'romance',\n  name: 'Romance'\n}, {\n  id: 'sci-fi',\n  name: 'Sci-Fi'\n}, {\n  id: 'thriller',\n  name: 'Thriller'\n}, {\n  id: 'documentary',\n  name: 'Documentary'\n}];\nconst movieLanguages = [{\n  id: 'english',\n  name: 'English'\n}, {\n  id: 'spanish',\n  name: 'Spanish'\n}, {\n  id: 'french',\n  name: 'French'\n}, {\n  id: 'hindi',\n  name: 'Hindi'\n}, {\n  id: 'korean',\n  name: 'Korean'\n}, {\n  id: 'japanese',\n  name: 'Japanese'\n}];\nfunction Settings({\n  user\n}) {\n  _s();\n  const [preferences, setPreferences] = useState({\n    food: {\n      cuisines: [],\n      dietary: []\n    },\n    movies: {\n      genres: [],\n      languages: []\n    }\n  });\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    loadPreferences();\n  }, []);\n  const loadPreferences = async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('http://localhost:5000/api/preferences', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPreferences(data.preferences || {\n          food: {\n            cuisines: [],\n            dietary: []\n          },\n          movies: {\n            genres: [],\n            languages: []\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error loading preferences:', error);\n    }\n  };\n  const togglePreference = (category, subcategory, optionId) => {\n    setPreferences(prev => {\n      var _prev$category;\n      const current = ((_prev$category = prev[category]) === null || _prev$category === void 0 ? void 0 : _prev$category[subcategory]) || [];\n      const updated = current.includes(optionId) ? current.filter(id => id !== optionId) : [...current, optionId];\n      return {\n        ...prev,\n        [category]: {\n          ...prev[category],\n          [subcategory]: updated\n        }\n      };\n    });\n  };\n  const savePreferences = async () => {\n    setLoading(true);\n    setSuccess('');\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('http://localhost:5000/api/preferences', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(preferences)\n      });\n      if (response.ok) {\n        setSuccess('Preferences updated successfully!');\n        setTimeout(() => setSuccess(''), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContainer, {\n    children: /*#__PURE__*/_jsxDEV(SettingsCard, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), \"Account Settings\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: [/*#__PURE__*/_jsxDEV(FiUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), \"Profile Information\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserInfoGrid, {\n          children: [/*#__PURE__*/_jsxDEV(InfoCard, {\n            children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n              children: [/*#__PURE__*/_jsxDEV(FiUser, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), \"Full Name\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n              children: (user === null || user === void 0 ? void 0 : user.name) || 'Not provided'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n            children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n              children: [/*#__PURE__*/_jsxDEV(FiMail, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), \"Email Address\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n              children: (user === null || user === void 0 ? void 0 : user.email) || 'Not provided'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"\\uD83C\\uDF7D\\uFE0F Food Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '25px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'white',\n              marginBottom: '15px',\n              fontSize: '1.1rem'\n            },\n            children: \"Favorite Cuisines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PreferenceGrid, {\n            children: foodOptions.map(option => {\n              var _preferences$food, _preferences$food$cui;\n              return /*#__PURE__*/_jsxDEV(PreferenceChip, {\n                selected: (_preferences$food = preferences.food) === null || _preferences$food === void 0 ? void 0 : (_preferences$food$cui = _preferences$food.cuisines) === null || _preferences$food$cui === void 0 ? void 0 : _preferences$food$cui.includes(option.id),\n                onClick: () => togglePreference('food', 'cuisines', option.id),\n                children: option.name\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'white',\n              marginBottom: '15px',\n              fontSize: '1.1rem'\n            },\n            children: \"Dietary Restrictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PreferenceGrid, {\n            children: dietaryOptions.map(option => {\n              var _preferences$food2, _preferences$food2$di;\n              return /*#__PURE__*/_jsxDEV(PreferenceChip, {\n                selected: (_preferences$food2 = preferences.food) === null || _preferences$food2 === void 0 ? void 0 : (_preferences$food2$di = _preferences$food2.dietary) === null || _preferences$food2$di === void 0 ? void 0 : _preferences$food2$di.includes(option.id),\n                onClick: () => togglePreference('food', 'dietary', option.id),\n                children: option.name\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"\\uD83C\\uDFAC Movie Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '25px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'white',\n              marginBottom: '15px',\n              fontSize: '1.1rem'\n            },\n            children: \"Favorite Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PreferenceGrid, {\n            children: movieGenres.map(option => {\n              var _preferences$movies, _preferences$movies$g;\n              return /*#__PURE__*/_jsxDEV(PreferenceChip, {\n                selected: (_preferences$movies = preferences.movies) === null || _preferences$movies === void 0 ? void 0 : (_preferences$movies$g = _preferences$movies.genres) === null || _preferences$movies$g === void 0 ? void 0 : _preferences$movies$g.includes(option.id),\n                onClick: () => togglePreference('movies', 'genres', option.id),\n                children: option.name\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: 'white',\n              marginBottom: '15px',\n              fontSize: '1.1rem'\n            },\n            children: \"Preferred Languages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PreferenceGrid, {\n            children: movieLanguages.map(option => {\n              var _preferences$movies2, _preferences$movies2$;\n              return /*#__PURE__*/_jsxDEV(PreferenceChip, {\n                selected: (_preferences$movies2 = preferences.movies) === null || _preferences$movies2 === void 0 ? void 0 : (_preferences$movies2$ = _preferences$movies2.languages) === null || _preferences$movies2$ === void 0 ? void 0 : _preferences$movies2$.includes(option.id),\n                onClick: () => togglePreference('movies', 'languages', option.id),\n                children: option.name\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n        onClick: savePreferences,\n        disabled: loading,\n        children: [/*#__PURE__*/_jsxDEV(FiSave, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), loading ? 'Saving...' : 'Save Preferences']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"oRTdxhQG1xGYj5sDAg15AxRWk1k=\");\n_c12 = Settings;\nexport default Settings;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"SettingsContainer\");\n$RefreshReg$(_c2, \"SettingsCard\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Section\");\n$RefreshReg$(_c5, \"SectionTitle\");\n$RefreshReg$(_c6, \"UserInfoGrid\");\n$RefreshReg$(_c7, \"InfoCard\");\n$RefreshReg$(_c8, \"InfoLabel\");\n$RefreshReg$(_c9, \"InfoValue\");\n$RefreshReg$(_c0, \"PreferenceGrid\");\n$RefreshReg$(_c1, \"PreferenceChip\");\n$RefreshReg$(_c10, \"SaveButton\");\n$RefreshReg$(_c11, \"SuccessMessage\");\n$RefreshReg$(_c12, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","styled","FiSettings","FiSave","FiUser","FiMail","jsxDEV","_jsxDEV","SettingsContainer","div","_c","SettingsCard","_c2","Title","h2","_c3","Section","_c4","SectionTitle","h3","_c5","UserInfoGrid","_c6","InfoCard","_c7","InfoLabel","_c8","InfoValue","_c9","PreferenceGrid","_c0","PreferenceChip","props","selected","_c1","SaveButton","button","_c10","SuccessMessage","_c11","foodOptions","id","name","dietaryOptions","movieGenres","movieLanguages","Settings","user","_s","preferences","setPreferences","food","cuisines","dietary","movies","genres","languages","loading","setLoading","success","setSuccess","loadPreferences","token","localStorage","getItem","response","fetch","headers","ok","data","json","error","console","togglePreference","category","subcategory","optionId","prev","_prev$category","current","updated","includes","filter","savePreferences","method","body","JSON","stringify","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","email","style","marginBottom","color","fontSize","map","option","_preferences$food","_preferences$food$cui","onClick","_preferences$food2","_preferences$food2$di","_preferences$movies","_preferences$movies$g","_preferences$movies2","_preferences$movies2$","disabled","_c12","$RefreshReg$"],"sources":["F:/hackathon_2/frontend/src/components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiSettings, FiSave, FiUser, FiMail } from 'react-icons/fi';\n\nconst SettingsContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst SettingsCard = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  padding: 30px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h2`\n  color: white;\n  margin-bottom: 30px;\n  font-size: 2rem;\n  font-weight: 300;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`;\n\nconst SectionTitle = styled.h3`\n  color: white;\n  margin-bottom: 20px;\n  font-size: 1.3rem;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst UserInfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  margin-bottom: 30px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 20px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst InfoLabel = styled.div`\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 14px;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst InfoValue = styled.div`\n  color: white;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst PreferenceGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 12px;\n  margin-bottom: 20px;\n`;\n\nconst PreferenceChip = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border: 2px solid ${props => props.selected ? 'rgba(255, 255, 255, 0.6)' : 'rgba(255, 255, 255, 0.2)'};\n  border-radius: 25px;\n  padding: 10px 15px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  color: white;\n  font-size: 14px;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.15);\n    border-color: rgba(255, 255, 255, 0.4);\n  }\n\n  ${props => props.selected && `\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-1px);\n  `}\n`;\n\nconst SaveButton = styled.button`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border: none;\n  border-radius: 12px;\n  padding: 15px 30px;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: 20px;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst SuccessMessage = styled.div`\n  background: rgba(0, 255, 0, 0.1);\n  border: 1px solid rgba(0, 255, 0, 0.3);\n  border-radius: 8px;\n  padding: 12px;\n  color: #51cf66;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst foodOptions = [\n  { id: 'italian', name: 'Italian' },\n  { id: 'chinese', name: 'Chinese' },\n  { id: 'indian', name: 'Indian' },\n  { id: 'mexican', name: 'Mexican' },\n  { id: 'japanese', name: 'Japanese' },\n  { id: 'american', name: 'American' },\n  { id: 'thai', name: 'Thai' },\n  { id: 'mediterranean', name: 'Mediterranean' }\n];\n\nconst dietaryOptions = [\n  { id: 'vegetarian', name: 'Vegetarian' },\n  { id: 'vegan', name: 'Vegan' },\n  { id: 'gluten-free', name: 'Gluten Free' },\n  { id: 'keto', name: 'Keto' },\n  { id: 'halal', name: 'Halal' },\n  { id: 'kosher', name: 'Kosher' }\n];\n\nconst movieGenres = [\n  { id: 'action', name: 'Action' },\n  { id: 'comedy', name: 'Comedy' },\n  { id: 'drama', name: 'Drama' },\n  { id: 'horror', name: 'Horror' },\n  { id: 'romance', name: 'Romance' },\n  { id: 'sci-fi', name: 'Sci-Fi' },\n  { id: 'thriller', name: 'Thriller' },\n  { id: 'documentary', name: 'Documentary' }\n];\n\nconst movieLanguages = [\n  { id: 'english', name: 'English' },\n  { id: 'spanish', name: 'Spanish' },\n  { id: 'french', name: 'French' },\n  { id: 'hindi', name: 'Hindi' },\n  { id: 'korean', name: 'Korean' },\n  { id: 'japanese', name: 'Japanese' }\n];\n\nfunction Settings({ user }) {\n  const [preferences, setPreferences] = useState({\n    food: { cuisines: [], dietary: [] },\n    movies: { genres: [], languages: [] }\n  });\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    loadPreferences();\n  }, []);\n\n  const loadPreferences = async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('http://localhost:5000/api/preferences', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setPreferences(data.preferences || {\n          food: { cuisines: [], dietary: [] },\n          movies: { genres: [], languages: [] }\n        });\n      }\n    } catch (error) {\n      console.error('Error loading preferences:', error);\n    }\n  };\n\n  const togglePreference = (category, subcategory, optionId) => {\n    setPreferences(prev => {\n      const current = prev[category]?.[subcategory] || [];\n      const updated = current.includes(optionId)\n        ? current.filter(id => id !== optionId)\n        : [...current, optionId];\n      \n      return {\n        ...prev,\n        [category]: {\n          ...prev[category],\n          [subcategory]: updated\n        }\n      };\n    });\n  };\n\n  const savePreferences = async () => {\n    setLoading(true);\n    setSuccess('');\n    \n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('http://localhost:5000/api/preferences', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(preferences)\n      });\n\n      if (response.ok) {\n        setSuccess('Preferences updated successfully!');\n        setTimeout(() => setSuccess(''), 3000);\n      }\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <SettingsContainer>\n      <SettingsCard>\n        <Title>\n          <FiSettings />\n          Account Settings\n        </Title>\n\n        {success && <SuccessMessage>{success}</SuccessMessage>}\n\n        <Section>\n          <SectionTitle>\n            <FiUser />\n            Profile Information\n          </SectionTitle>\n          <UserInfoGrid>\n            <InfoCard>\n              <InfoLabel>\n                <FiUser />\n                Full Name\n              </InfoLabel>\n              <InfoValue>{user?.name || 'Not provided'}</InfoValue>\n            </InfoCard>\n            <InfoCard>\n              <InfoLabel>\n                <FiMail />\n                Email Address\n              </InfoLabel>\n              <InfoValue>{user?.email || 'Not provided'}</InfoValue>\n            </InfoCard>\n          </UserInfoGrid>\n        </Section>\n\n        <Section>\n          <SectionTitle>\n            🍽️ Food Preferences\n          </SectionTitle>\n          \n          <div style={{ marginBottom: '25px' }}>\n            <h4 style={{ color: 'white', marginBottom: '15px', fontSize: '1.1rem' }}>\n              Favorite Cuisines\n            </h4>\n            <PreferenceGrid>\n              {foodOptions.map(option => (\n                <PreferenceChip\n                  key={option.id}\n                  selected={preferences.food?.cuisines?.includes(option.id)}\n                  onClick={() => togglePreference('food', 'cuisines', option.id)}\n                >\n                  {option.name}\n                </PreferenceChip>\n              ))}\n            </PreferenceGrid>\n          </div>\n\n          <div>\n            <h4 style={{ color: 'white', marginBottom: '15px', fontSize: '1.1rem' }}>\n              Dietary Restrictions\n            </h4>\n            <PreferenceGrid>\n              {dietaryOptions.map(option => (\n                <PreferenceChip\n                  key={option.id}\n                  selected={preferences.food?.dietary?.includes(option.id)}\n                  onClick={() => togglePreference('food', 'dietary', option.id)}\n                >\n                  {option.name}\n                </PreferenceChip>\n              ))}\n            </PreferenceGrid>\n          </div>\n        </Section>\n\n        <Section>\n          <SectionTitle>\n            🎬 Movie Preferences\n          </SectionTitle>\n          \n          <div style={{ marginBottom: '25px' }}>\n            <h4 style={{ color: 'white', marginBottom: '15px', fontSize: '1.1rem' }}>\n              Favorite Genres\n            </h4>\n            <PreferenceGrid>\n              {movieGenres.map(option => (\n                <PreferenceChip\n                  key={option.id}\n                  selected={preferences.movies?.genres?.includes(option.id)}\n                  onClick={() => togglePreference('movies', 'genres', option.id)}\n                >\n                  {option.name}\n                </PreferenceChip>\n              ))}\n            </PreferenceGrid>\n          </div>\n\n          <div>\n            <h4 style={{ color: 'white', marginBottom: '15px', fontSize: '1.1rem' }}>\n              Preferred Languages\n            </h4>\n            <PreferenceGrid>\n              {movieLanguages.map(option => (\n                <PreferenceChip\n                  key={option.id}\n                  selected={preferences.movies?.languages?.includes(option.id)}\n                  onClick={() => togglePreference('movies', 'languages', option.id)}\n                >\n                  {option.name}\n                </PreferenceChip>\n              ))}\n            </PreferenceGrid>\n          </div>\n        </Section>\n\n        <SaveButton onClick={savePreferences} disabled={loading}>\n          <FiSave />\n          {loading ? 'Saving...' : 'Save Preferences'}\n        </SaveButton>\n      </SettingsCard>\n    </SettingsContainer>\n  );\n}\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}